{"ast":null,"code":"import _classCallCheck from \"/home/bhavesh/reactapp/Student-Club-Payment-Portal/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bhavesh/reactapp/Student-Club-Payment-Portal/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/bhavesh/reactapp/Student-Club-Payment-Portal/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bhavesh/reactapp/Student-Club-Payment-Portal/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/bhavesh/reactapp/Student-Club-Payment-Portal/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/bhavesh/reactapp/Student-Club-Payment-Portal/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/bhavesh/reactapp/Student-Club-Payment-Portal/src/Timeslots.js\";\nimport React, { Component } from 'react';\nimport { Grid, Row, Col, Button, OverlayTrigger, Popover } from 'react-bootstrap';\nimport './App.css';\nimport TsModal from './tsmodal';\n\nvar Timeslots =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Timeslots, _Component);\n\n  function Timeslots(props, context) {\n    var _this;\n\n    _classCallCheck(this, Timeslots);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Timeslots).call(this, props, context));\n\n    _this.getList = function () {\n      fetch(\"/purchase\").then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        _this.setState({\n          list: json\n        });\n      });\n    };\n\n    _this.handleShow = _this.handleShow.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClose = _this.handleClose.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleButPush = _this.handleButPush.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.colhour = _this.colhour.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      show: false,\n      buttonPush: 'invalid',\n      list: [],\n      time: ['10:00-10:30', '10:30-11:00', '11:00-11:30', '11:30-12:00', '12:00-12:30', '12:30-13:00', '13:00-13:30', '13:30-14:00', '14:00-14:30', '14:30-15:00', '15:00-15:30', '15:30-16:00', '16:00-16:30', '16:30-17:00', '17:00-17:30', '17:30-18:00', '18:00-18:30', '19:00-19:30', '19:30-20:00', '20:00-20:30', '20:30-21:00', '21:00-21:30', '22:00-22:30', '22:30-23:00', '23:00-23:30', '23:30-24:00'],\n      popoverlist: [{\n        'p1': \"Available\",\n        'p2': \"Available\",\n        's1': \"Available\",\n        's2': \"Available\",\n        's3': \"Available\"\n      }, {\n        'p1': \"Available\",\n        'p2': \"Available\",\n        's1': \"Available\",\n        's2': \"Available\",\n        's3': \"Available\"\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(Timeslots, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getList();\n    }\n  }, {\n    key: \"handleClose\",\n    value: function handleClose() {\n      this.setState({\n        show: false\n      });\n    }\n  }, {\n    key: \"handleShow\",\n    value: function handleShow() {\n      this.setState({\n        show: true\n      });\n    }\n  }, {\n    key: \"handleButPush\",\n    value: function handleButPush(val) {\n      this.setState({\n        buttonpush: val\n      });\n    }\n  }, {\n    key: \"handlePopoverList\",\n    value: function handlePopoverList(keeptime, butdisable, count) {\n      var newList = this.state.popoverlist.slice();\n\n      if (keeptime === butdisable[0]) {\n        if (butdisable[1] === 'Pool Table 1') {\n          newList[count].p1 = \"Booked\";\n        } else if (butdisable[1] === 'Pool Table 2') {\n          newList[count].p2 = \"Booked\";\n        } else if (butdisable[1] === 'Snooker Table 1') {\n          newList[count].s1 = \"Booked\";\n        } else if (butdisable[1] === 'Snooker Table 2') {\n          newList[count].s2 = \"Booked\";\n        } else if (butdisable.butdisable[1] === 'Snooker Table 3') {\n          newList[count].s3 = \"Booked\";\n        }\n\n        setTimeout(function () {\n          this.setState({\n            popoverlist: newlist\n          });\n        }.bind(this), 86400000);\n      }\n    }\n  }, {\n    key: \"popoverHoverFocus\",\n    value: function popoverHoverFocus(count) {\n      return React.createElement(Popover, {\n        id: \"popover-trigger-hover-focus\",\n        title: \"Table status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"P1 -> \", this.state.popoverlist[count].p1), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"P2 -> \", this.state.popoverlist[count].p2), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"S1 -> \", this.state.popoverlist[count].s1), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"S2 -> \", this.state.popoverlist[count].s2), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"S3 -> \", this.state.popoverlist[count].s3), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"colhour\",\n    value: function colhour(keeptime, butdisable, count) {\n      var _this2 = this;\n\n      return React.createElement(Col, {\n        className: \"halfhour\",\n        xs: 4,\n        md: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(TsModal, {\n        modalid: this.state.buttonpush,\n        show: this.state.show,\n        onhide: this.handleClose,\n        onclick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(OverlayTrigger, {\n        overlay: this.popoverHoverFocus(count),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Button, {\n        bsStyle: \"primary\",\n        bsSize: \"small\",\n        onMouseEnter: function onMouseEnter() {\n          _this2.handlePopoverList(keeptime, butdisable, count);\n        },\n        onClick: function onClick() {\n          _this2.handleShow();\n\n          _this2.handleButPush({\n            keeptime: keeptime\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, keeptime)));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var slot = this.state.list;\n      var time = this.state.time;\n      return React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(Row, {\n        className: \"timeslot\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, this.colhour(time[0], slot, 0), this.colhour(time[1], slot, 1), slot));\n    }\n  }]);\n\n  return Timeslots;\n}(Component);\n\nexport default Timeslots;","map":{"version":3,"sources":["/home/bhavesh/reactapp/Student-Club-Payment-Portal/src/Timeslots.js"],"names":["React","Component","Grid","Row","Col","Button","OverlayTrigger","Popover","TsModal","Timeslots","props","context","getList","fetch","then","res","json","setState","list","handleShow","bind","handleClose","handleButPush","colhour","state","show","buttonPush","time","popoverlist","val","buttonpush","keeptime","butdisable","count","newList","slice","p1","p2","s1","s2","s3","setTimeout","newlist","popoverHoverFocus","handlePopoverList","slot"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Grid,\n  Row,\n  Col,\n  Button,\n  OverlayTrigger,\n  Popover,\n} from 'react-bootstrap';\nimport './App.css';\nimport TsModal from'./tsmodal';\n\nclass Timeslots extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleShow = this.handleShow.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleButPush = this.handleButPush.bind(this);\n    this.colhour = this.colhour.bind(this);\n    this.state = {\n      show: false, \n      buttonPush: 'invalid',\n      list : [],  \n      time : ['10:00-10:30', '10:30-11:00', '11:00-11:30', '11:30-12:00', '12:00-12:30', '12:30-13:00', '13:00-13:30', '13:30-14:00', '14:00-14:30', '14:30-15:00', '15:00-15:30', '15:30-16:00', '16:00-16:30', '16:30-17:00', '17:00-17:30', '17:30-18:00', '18:00-18:30', '19:00-19:30','19:30-20:00', '20:00-20:30', '20:30-21:00', '21:00-21:30', '22:00-22:30', '22:30-23:00', '23:00-23:30', '23:30-24:00'],\n      popoverlist : [{'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\"},\n                     {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\"}],\n    };\n  }\n\n  componentDidMount() {\n    this.getList();\n  }\n\n  getList = () => {\n    fetch(\"/purchase\")\n    .then( (res) => res.json())   \n    .then( (json) => {this.setState({list: json});});\n  }\n\n  handleClose() {\n    this.setState({ show: false });\n  }\n\n  handleShow() {\n    this.setState({ show: true });\n  }\n  handleButPush(val) {\n    this.setState({ buttonpush: val });\n  }\n\n  handlePopoverList(keeptime,butdisable, count) {\n    const newList = this.state.popoverlist.slice();\n    if(keeptime === butdisable[0]) {\n       if(butdisable[1] === 'Pool Table 1') {\n        newList[count].p1 = \"Booked\";\n       }\n       else if(butdisable[1] === 'Pool Table 2') {\n        newList[count].p2 = \"Booked\";\n      \n       }\n       else if(butdisable[1] === 'Snooker Table 1') {\n        newList[count].s1 = \"Booked\";\n        \n       }\n       else if(butdisable[1] === 'Snooker Table 2') {\n        newList[count].s2 = \"Booked\";\n      \n       }\n       else if(butdisable.butdisable[1] === 'Snooker Table 3') {\n        newList[count].s3 = \"Booked\";\n       }\n\n       setTimeout(function(){\n        this.setState({popoverlist:newlist});\n       }.bind(this),86400000);\n    }\n  }\n\n  popoverHoverFocus(count) {\n  return(\n  <Popover id=\"popover-trigger-hover-focus\" title=\"Table status\">\n    <strong >P1 -> {this.state.popoverlist[count].p1}</strong> <br />\n    <strong >P2 -> {this.state.popoverlist[count].p2}</strong> <br />\n    <strong >S1 -> {this.state.popoverlist[count].s1}</strong> <br />\n    <strong >S2 -> {this.state.popoverlist[count].s2}</strong> <br />\n    <strong >S3 -> {this.state.popoverlist[count].s3}</strong> <br />\n  </Popover>\n  );\n  } \n\n  \n  colhour(keeptime,butdisable,count) {\n    return(  \n        <Col className='halfhour' xs={4} md={1}>\n          <TsModal modalid = {this.state.buttonpush} show={this.state.show} onhide={this.handleClose} onclick={this.handleClose} />\n            <OverlayTrigger overlay = {this.popoverHoverFocus(count)}>\n              <Button bsStyle=\"primary\" bsSize=\"small\" onMouseEnter={() => {this.handlePopoverList(keeptime, butdisable, count);}} onClick={() => { this.handleShow(); this.handleButPush({keeptime}); }}>\n                {keeptime} \n              </Button>\n            </OverlayTrigger>\n        </Col>\n    );\n  }\n\n  render() { \n    var slot = this.state.list;\n    var time = this.state.time;\n    return (\n    <Grid>\n     <br></br>\n      <Row className=\"timeslot\">\n        {this.colhour(time[0],slot,0)}\n        {this.colhour(time[1],slot,1)}\n        {slot}\n        {/*{this.colhour('11:00-11:30')}\n        {this.colhour('11:30-12:00')}\n        {this.colhour('12:00-12:30')}\n        {this.colhour('12:30-13:00')}\n        {this.colhour('13:00-13:30')}\n      </Row>\n      <Row className=\"timeslot\">\n        {this.colhour('13:30-14:00')}\n        {this.colhour('14:00-14:30')}\n        {this.colhour('14:30-15:00')}\n        {this.colhour('15:00-15:30')}\n        {this.colhour('15:30-16:00')}\n        {this.colhour('16:00-16:30')}\n        {this.colhour('16:30-17:00')}\n      </Row>\n      <Row className=\"timeslot\">\n        {this.colhour('17:00-17:30')}\n        {this.colhour('17:30-18:00')}\n        {this.colhour('18:00-18:30')}\n        {this.colhour('18:30-19:00')}\n        {this.colhour('19:00-19:30')}\n        {this.colhour('19:30-20:00')}\n        {this.colhour('20:00-20:30')}\n      </Row>\n      <Row className=\"timeslot\">\n        {this.colhour('20:30-21:00')}\n        {this.colhour('21:00-21:30')}\n        {this.colhour('21:30-22:00')}\n        {this.colhour('22:00-22:30')}\n        {this.colhour('22:30-23:00')}\n        {this.colhour('23:00-23:30')}\n    {this.colhour('23:30-24:00')} */}\n      </Row>\n      \n    </Grid>\n      \n    );\n  }\n}\n\nexport default Timeslots; "]},"metadata":{},"sourceType":"module"}