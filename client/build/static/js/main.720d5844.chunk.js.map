{"version":3,"sources":["output-0.jpg","snooker.jpg","navbarhead.js","tsmodal.js","Timeslots.js","AdminTsmodal.js","LsFoosballAdmin.js","AdminTimeslots.js","LoginAdmin.js","LsFoosballFront.js","LsCarromAdmin.js","LsCarromFront.js","LsChessAdmin.js","LsChessFront.js","LsPoolAdmin.js","LsPoolFront.js","LsSnookerAdmin.js","LsSnookerFront.js","TableBookingStatus.js","NewBooking.js","PsBookingStatus.js","PsTsModal.js","PsTimeslots.js","App.js","index.js","playstation.jpg"],"names":["module","exports","__webpack_require__","p","navstyle","color","NavbarHeader","react_default","a","createElement","Navbar","inverse","fixed","style","width","background","Header","Brand","href","src","Background","alt","marginTop","height","Toggle","Collapse","Nav","pullRight","NavDropdown","eventKey","title","id","MenuItem","Component","OPTIONS","TsModal","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getList","fetch","then","res","json","result","setState","handlePostReq","bind","assertThisInitialized","handleTotalBooking","handleCheckbox","state","finalbook","totalamount","currentTable","currentAmount","dis","checkboxDis","times","item","amount","method","body","JSON","stringify","headers","Content-Type","data","console","log","catch","err","e","target","name","newArr","totamo","newEle","value","includes","length","push","index","indexOf","splice","currentT","currentA","_this2","i","TableType","TableTime","map","marginRight","for","onChange","type","str","keeptimeNew","keeptime","_this3","_this$state","final","modalid","slot","popoverlist","count","disabled","p1","p2","s1","s2","s3","s4","s5","Modal","show","onHide","onhide","closeButton","Title","Body","Button","bsStyle","bsSize","onClick","Footer","position","textAlign","createCheckboxes","onclick","hidden","React","btstyle","padding","margin","Timeslots","context","handleShow","handleClose","handleButPush","colhour","handlePopoverList","buttonPush","time","val","buttonpush","butdisable","newList","slice","Popover","Col","className","xs","md","AdminTsmodal","OverlayTrigger","overlay","popoverHoverFocus","onMouseEnter","Grid","Row","LoginAdmin","handleChange","newState","pass","admin","AdminTimeslots","htmlFor","required","sectionStyle","paddingBottom","overflowX","TableBookingStatus","timesP1","timesP2","timesS1","timesS2","timesS3","timesS4","timesS5","backgroundColor","marginBottom","borderRadius","paddingLeft","sm","Card","outline","CardBody","CardTitle","CardSubtitle","CardText","PT1options","backgroundImage","concat","paddingTop","marginLeft","PSBookingStatus","PsTsModal","backstyle","backgroundRepeat","backgroundSize","top","left","right","bottom","minWidth","minHeight","App","BrowserRouter","navbarhead","Route","exact","path","render","Fragment","src_TableBookingStatus","component","ReactDOM","document","getElementById"],"mappings":"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C,GAAO,YAAaC,GAAO,YAAcC,GAAO,YAAaC,GAAO,YAAaC,GAAO,aAC/H,CAACN,GAAM,YAAaC,GAAM,YAAaC,GAAO,YAAaC,GAAO,YAAcC,GAAO,YAAaC,GAAO,YAAaC,GAAO,aAC/H,CAACN,GAAM,YAAaC,GAAM,YAAaC,GAAO,YAAaC,GAAO,YAAcC,GAAO,YAAaC,GAAO,YAAaC,GAAO,aAC/H,CAACN,GAAM,YAAaC,GAAM,YAAaC,GAAO,YAAaC,GAAO,YAAcC,GAAO,YAAaC,GAAO,YAAaC,GAAO,aAC/H,CAACN,GAAM,YAAaC,GAAM,YAAaC,GAAO,YAAaC,GAAO,YAAcC,GAAO,YAAaC,GAAO,YAAaC,GAAO,aAC/H,CAACN,GAAM,YAAaC,GAAM,YAAaC,GAAO,YAAaC,GAAO,YAAcC,GAAO,YAAaC,GAAO,YAAaC,GAAO,aAC/H,CAACN,GAAM,YAAaC,GAAM,YAAaC,GAAO,YAAaC,GAAO,YAAcC,GAAO,YAAaC,GAAO,YAAaC,GAAO,aAC/H,CAACN,GAAM,YAAaC,GAAM,YAAaC,GAAO,YAAaC,GAAO,YAAcC,GAAO,YAAaC,GAAO,YAAaC,GAAO,aAC/H,CAACN,GAAM,YAAaC,GAAM,YAAaC,GAAO,YAAaC,GAAO,YAAcC,GAAO,YAAaC,GAAO,YAAaC,GAAO,aAC/H,CAACN,GAAM,YAAaC,GAAM,YAAaC,GAAO,YAAaC,GAAO,YAAcC,GAAO,YAAaC,GAAO,YAAaC,GAAO,aAC/H,CAACN,GAAM,YAAaC,GAAM,YAAaC,GAAO,YAAaC,GAAO,YAAcC,GAAO,YAAaC,GAAO,YAAaC,GAAO,aAC/H,CAACN,GAAM,YAAaC,GAAM,YAAaC,GAAO,YAAaC,GAAO,YAAcC,GAAO,YAAaC,GAAO,YAAaC,GAAO,aAC/H,CAACN,GAAM,YAAaC,GAAM,YAAaC,GAAO,YAAaC,GAAO,YAAcC,GAAO,YAAaC,GAAO,YAAaC,GAAO,aAC/H,CAACN,GAAM,YAAaC,GAAM,YAAaC,GAAO,YAAaC,GAAO,YAAcC,GAAO,YAAaC,GAAO,YAAaC,GAAO,aAC/H,CAACN,GAAM,YAAaC,GAAM,YAAaC,GAAO,YAAaC,GAAO,YAAcC,GAAO,YAAaC,GAA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","file":"static/js/main.720d5844.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/output-0.c9f52a6d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/snooker.424e45de.jpg\";","import React, { Component } from 'react';\nimport {\n  Navbar, Nav,NavDropdown,MenuItem\n} from 'react-bootstrap';\nimport Background from './output-0.jpg';\nvar navstyle = {\n  color:'white'\n}\nclass NavbarHeader extends Component {\n  render() {\n    return (\n    <Navbar inverse fixed='top' style = {{ width: '100%', background: 'none'}} >\n      <Navbar.Header>\n        <Navbar.Brand>\n        <a href=\"/\" style={navstyle}><img src={Background} alt='stuc logo' href='/' style={{width:80, marginTop: -7, height:50}} /></a>\n        </Navbar.Brand>\n        <Navbar.Toggle />\n      </Navbar.Header>\n      <Navbar.Collapse>\n        <Nav pullRight>\n          <NavDropdown eventKey={3} title=\"Livestream\" id=\"basic-nav-dropdown\">\n            <MenuItem eventKey={3.1} href=\"/foosballstream\">Foosball</MenuItem>\n            <MenuItem eventKey={3.2} href=\"/chessstream\">Chess</MenuItem>\n            <MenuItem eventKey={3.3} href=\"/snookerstream\">Snooker</MenuItem>\n            <MenuItem eventKey={3.4} href=\"/poolstream\">Pool</MenuItem>\n            <MenuItem eventKey={3.5} href=\"/carromstream\">Carrom</MenuItem>\n          </NavDropdown>\n          {/* <NavDropdown eventKey={4} title=\"BookingPortal\" id=\"basic-nav-dropdown\">\n            <MenuItem eventKey={4.2} href=\"/portal\">Pool and Snooker Table Booking</MenuItem>\n            <MenuItem eventKey={4.2} href=\"/psbooking\">Playstation Booking</MenuItem>\n          </NavDropdown> */}\n          <NavDropdown eventKey={5} title=\"Booking Status\" id=\"basic-nav-dropdown\">\n            <MenuItem eventKey={5.1} href=\"/tablestatus\">Table Booking Status</MenuItem>\n            <MenuItem eventKey={5.2} href=\"/psstatus\">Playstation Booking Status</MenuItem>\n          </NavDropdown>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n    );\n  }\n}\n\nexport default NavbarHeader;","import React from 'react';\nimport {\n  Modal,\n  Button,\n  Checkbox\n} from 'react-bootstrap';\n\nvar OPTIONS = [];\n\n\nclass TsModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handlePostReq = this.handlePostReq.bind(this);\n    this.handleTotalBooking = this.handleTotalBooking.bind(this);\n    this.handleCheckbox = this.handleCheckbox.bind(this);\n    //this.handleShowCheckbox = this.handleShowCheckbox.bind(this);\n    this.state = {\n      finalbook : [],\n      result: [],\n      totalamount : 0,\n      currentTable: '',\n      currentAmount: 0,\n      dis:true,\n      checkboxDis:true,\n      times:[]\n    };\n    \n  }\n \n  componentDidMount() {\n    this.getList();\n  }\n\n  getList = () => {\n    \n    fetch(\"/mznFag7kV7\")\n    .then(res => res.json())\n    .then(result => this.setState({ result }))\n  }\n\n  handlePostReq(item,amount) {\n    // eslint-disable-next-line\n    fetch('/', {\n      method: 'POST',\n      body: JSON.stringify({\n        item : item,\n        amount : amount\n      }),\n      headers:{\n        'Content-Type': 'application/json'\n      }\n     }).then((res) => res.json())\n     .then((data) =>  console.log(data))\n     .catch((err)=>console.log(err));\n  }\n\n  handleCheckbox(e) {\n    \n    if(e.target.name === 'unchecked') {\n      e.target.name = 'checked';\n      var newArr = this.state.finalbook;\n      var totamo = this.state.totalamount\n      var newEle = e.target.value;\n      if(newArr.includes(newEle) || newArr.length === 5) {\n      }\n      else {\n      newArr.push(newEle);\n      //totamo = totamo + amount;\n      }\n    }\n    else if(e.target.name === 'checked') {\n      e.target.name = 'unchecked';\n      var newArr = this.state.finalbook;\n      var totamo = this.state.totalamount\n      var newEle = e.target.value;\n      if(newArr.includes(newEle) || newArr.length < 5) {\n        var index = newArr.indexOf(newEle);\n        newArr.splice(index, 1);\n      }\n    }\n    this.setState({finalbook:newArr, totalamount: totamo});\n  }\n\n  createCheckboxes(currentT, currentA) {\n    const {result} = this.state;\n    this.setState({checkboxDis:false});\n    OPTIONS = ['10:00-10:30', '10:30-11:00', '11:00-11:30', '11:30-12:00', '12:00-12:30', '12:30-13:00', '13:00-13:30', '13:30-14:00', '14:00-14:30', '14:30-15:00', '15:00-15:30', '15:30-16:00', '16:00-16:30', '16:30-17:00', '17:00-17:30', '17:30-18:00', '18:00-18:30', '19:00-19:30','19:30-20:00', '20:00-20:30', '20:30-21:00', '21:00-21:30', '22:00-22:30', '22:30-23:00', '23:00-23:30', '23:30-24:00'];\n    if(result) {\n      for(var i=0; i<result.length; i++) {\n        if(result[i].TableType === currentT.currentTable) {\n          var index = OPTIONS.indexOf(result[i].TableTime);\n          OPTIONS.splice(index, 1);\n        }\n      }\n      OPTIONS = OPTIONS.map(value => {\n        return  ( <label style={{marginRight:'10px'}} for=\"mybox\">{value}<li><br></br><input  onChange={this.handleCheckbox} type=\"checkbox\" id=\"mybox\"  name = 'unchecked' value={value + \" \" + currentT.currentTable}  /></li></label> \n        );\n      });\n    }\n  }\n  \n  handleTotalBooking(item,str,amount) {\n    // eslint-disable-next-line\n    this.setState({currentTable:str, currentAmount:amount, dis:false})\n    var newArr = this.state.finalbook;\n    var totamo = this.state.totalamount\n    item.keeptimeNew = item.keeptime + \" \" + str;\n    if(newArr.includes(item.keeptimeNew) || newArr.length === 3) {\n    }\n    else {\n    newArr.push(item.keeptimeNew);\n    totamo = totamo + amount;\n    this.setState({finalbook:newArr, totalamount: totamo});\n    }\n  }\n\n  \n  render() {\n    var  { finalbook, totalamount, currentTable, currentAmount} = this.state;\n    var final = this.state.finalbook;\n    final = final.map(function(value){\n      return <li> {value} </li>;\n    });\n    var item = this.props.modalid;\n    var slot = this.props.popoverlist;\n    var count = this.props.count;\n    var disabled = [false,false,false,false];\n    if(slot && item) {\n      if(slot[count].p1 === 'Booked') {\n        disabled[0] = true;\n      }\n      if(slot[count].p2 === 'Booked') {\n        disabled[1] = true;\n      }\n      if(slot[count].s1 === 'Booked') {\n        disabled[2] = true;\n      }\n      if(slot[count].s2 === 'Booked') {\n        disabled[3] = true;\n      }\n      if(slot[count].s3 === 'Booked') {\n        disabled[4] = true;\n      }\n      if(slot[count].s4 === 'Booked') {\n        disabled[5] = true;\n      }\n      if(slot[count].s5 === 'Booked') {\n        disabled[6] = true;\n      }\n    }\n\n    return (\n      \t<Modal show={this.props.show} onHide={this.props.onhide}>\n          <Modal.Header closeButton>\n          <Modal.Title>Book Tables</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>            \n            <hr />\n            <Button disabled = {disabled[0]} bsStyle=\"primary\" bsSize=\"small\" onClick={() => { this.handleTotalBooking(item, 'Pool Table 1',5)}} >Pool table 1 </Button>\n            <Button disabled = {disabled[1]} bsStyle=\"primary\" bsSize=\"small\" onClick={() => { this.handleTotalBooking(item, 'Pool Table 2',5)}}>Pool table 2</Button>\n            <Button disabled = {disabled[2]} bsStyle=\"primary\" bsSize=\"small\" onClick={() => { this.handleTotalBooking(item, 'Snooker Table 1',10)}}>Snooker table 1</Button>\n            <Button disabled = {disabled[3]} bsStyle=\"primary\" bsSize=\"small\" onClick={() => { this.handleTotalBooking(item, 'Snooker Table 2',10)}}>Snooker table 2</Button>\n            <Button disabled = {disabled[4]} bsStyle=\"primary\" bsSize=\"small\" onClick={() => { this.handleTotalBooking(item, 'Snooker Table 3',10)}}>Snooker table 3</Button>\n            <Button disabled = {disabled[5]} bsStyle=\"primary\" bsSize=\"small\" onClick={() => { this.handleTotalBooking(item, 'Snooker Table 4',10)}}>Snooker table 4</Button>\n            <Button disabled = {disabled[6]} bsStyle=\"primary\" bsSize=\"small\" onClick={() => { this.handleTotalBooking(item, 'Snooker Table 5',10)}}>Snooker table 5</Button>\n          </Modal.Body>\n          <Modal.Footer style={{position:'relative', textAlign:'left'}}>\n            Total Amount is : {this.state.totalamount}\n            <br></br>\n            Bookings made are : {final}\n            <br></br>\n            <Button onClick={() => { this.handlePostReq({finalbook},{totalamount})}} href = \"/payment\">Confirm Booking</Button>\n            <Button disabled ={this.state.dis}  onClick={() => {this.createCheckboxes({currentTable}, {currentAmount})}}>Book more {currentTable}</Button>\n            <Button onClick={this.props.onclick}>Close</Button>\n            \n          </Modal.Footer>\n          <h4 hidden = {this.state.checkboxDis}>{currentTable} free slots</h4>\n          <ul hidden = {this.state.checkboxDis}>{OPTIONS}</ul>\n        </Modal>\n    );\n  }\n}\n\nexport default TsModal;","import React, { Component } from 'react';\nimport {\n  Grid,\n  Row,\n  Col,\n  Button,\n  OverlayTrigger,\n  Popover,\n} from 'react-bootstrap';\nimport './App.css';\nimport TsModal from'./tsmodal';\n\n\nvar btstyle = {\n  padding: '10px',\n  margin : '10px',\n}\n// declaring variable for \nclass Timeslots extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleShow = this.handleShow.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleButPush = this.handleButPush.bind(this);\n    this.colhour = this.colhour.bind(this);\n    this.handlePopoverList = this.handlePopoverList.bind(this);\n    this.state = {\n      show: false, \n      buttonPush: 'invalid',\n      count : 0,\n      result: [],  \n      time : ['10:00-10:30', '10:30-11:00', '11:00-11:30', '11:30-12:00', '12:00-12:30', '12:30-13:00', '13:00-13:30', '13:30-14:00', '14:00-14:30', '14:30-15:00', '15:00-15:30', '15:30-16:00', '16:00-16:30', '16:30-17:00', '17:00-17:30', '17:30-18:00', '18:00-18:30', '19:00-19:30','19:30-20:00', '20:00-20:30', '20:30-21:00', '21:00-21:30', '22:00-22:30', '22:30-23:00', '23:00-23:30', '23:30-24:00'],\n      popoverlist : [{'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},\n                     {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},\n                     {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},\n                     {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},\n                     {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},\n                     {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},\n                     {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},\n                     {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},\n                     {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},\n                     {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},\n                     {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},\n                     {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},\n                     {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},\n                     {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},\n                     {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},\n                     {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},\n                     {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},\n                     {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},\n                     {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},\n                     {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},\n                     {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},\n                     {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},\n                     {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},\n                     {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},\n                     {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},\n                     {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},\n                     {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},\n                     {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},                    \n                    ],\n    };\n  }\n\n  componentDidMount() {\n    this.getList();\n  }\n\n  getList = () => {\n    \n    fetch(\"/mznFag7kV7\")\n    .then(res => res.json())\n    .then(result => this.setState({ result }))\n  }\n\n  handleClose() {\n    this.setState({ show: false });\n  }\n\n  handleShow() {\n    this.setState({ show: true });\n  }\n  handleButPush(val,count) {\n    this.setState({ buttonpush: val , count: count});\n  }\n\n  handlePopoverList(keeptime,butdisable, count) {\n    const newList = this.state.popoverlist.slice();\n    if(butdisable) {\n      for (var i=0; i < butdisable.length; i++) {\n        if(butdisable[i].TableTime === keeptime) {\n          if(butdisable[i].TableType === 'Pool Table 1') {\n            newList[count].p1 = 'Booked';\n          }\n          if(butdisable[i].TableType === 'Pool Table 2') {\n            newList[count].p2 = 'Booked';\n          }\n          if(butdisable[i].TableType === 'Snooker Table 1') {\n            newList[count].s1 = 'Booked';\n          }\n          if(butdisable[i].TableType === 'Snooker Table 2') {\n            newList[count].s2 = 'Booked';\n          }\n          if(butdisable[i].TableType === 'Snooker Table 3') {\n            newList[count].s3 = 'Booked';\n          }\n          if(butdisable[i].TableType === 'Snooker Table 4') {\n            newList[count].s4 = 'Booked';\n          }\n          if(butdisable[i].TableType === 'Snooker Table 5') {\n            newList[count].s5 = 'Booked';\n          }\n        }\n      }\n      this.setState({popoverlist : newList});\n    }\n\n  }\n\n  popoverHoverFocus(count) {\n  return(\n  <Popover id=\"popover-trigger-hover-focus\" title=\"Table status\">\n    <strong >P1 -> {this.state.popoverlist[count].p1}</strong> <br />\n    <strong >P2 -> {this.state.popoverlist[count].p2}</strong> <br />\n    <strong >S1 -> {this.state.popoverlist[count].s1}</strong> <br />\n    <strong >S2 -> {this.state.popoverlist[count].s2}</strong> <br />\n    <strong >S3 -> {this.state.popoverlist[count].s3}</strong> <br />\n    <strong >S4 -> {this.state.popoverlist[count].s4}</strong> <br />\n    <strong >S5 -> {this.state.popoverlist[count].s5}</strong> <br />\n  </Popover>\n  );\n  } \n  \n  \n  colhour(keeptime,butdisable,count) {\n    return(  \n        <Col className='halfhour' xs={4} md={1}>\n          <TsModal modalid = {this.state.buttonpush} popoverlist = {this.state.popoverlist} count = {this.state.count} show={this.state.show} onhide={this.handleClose} onclick={this.handleClose}   />\n            <OverlayTrigger overlay = {this.popoverHoverFocus(count)} delay={{ show: 250, hide: 400 }}>\n              <Button bsStyle=\"outline-info\" bsSize=\"large\" style={btstyle} onMouseEnter={() => {this.handlePopoverList(keeptime, butdisable, count);}} onClick={() => { this.handleShow(); this.handleButPush({keeptime},count); }}>\n                {keeptime} \n              </Button>\n            </OverlayTrigger>\n        </Col>\n    );\n  }\n\n\n  render() {\n    const { result } = this.state;\n    if(result === null) {\n      return <div />\n    }\n    if(result) {\n    var slot = result;\n    } \n    var time = this.state.time;\n    return (\n    <Grid>\n       <h1 style={{color: 'white', marginLeft: '25px'}}><b>Pool And Snooker Booking</b></h1>\n     <br></br>\n      <Row className=\"timeslot\">\n        {this.colhour(time[0],slot,0)}\n        {this.colhour(time[1],slot,1)}\n        {this.colhour(time[2],slot,2)}\n        {this.colhour(time[3],slot,3)}\n        {this.colhour(time[4],slot,4)}\n        {this.colhour(time[5],slot,5)}\n        {this.colhour(time[6],slot,6)}\n      </Row>\n      <Row className=\"timeslot\">\n        {this.colhour(time[7],slot,7)}\n        {this.colhour(time[8],slot,8)}\n        {this.colhour(time[9],slot,9)}\n        {this.colhour(time[10],slot,10)}\n        {this.colhour(time[11],slot,11)}\n        {this.colhour(time[12],slot,12)}\n        {this.colhour(time[13],slot,13)}\n      </Row>\n      <Row className=\"timeslot\">\n        {this.colhour(time[14],slot,14)}\n        {this.colhour(time[15],slot,15)}\n        {this.colhour(time[16],slot,16)}\n        {this.colhour(time[17],slot,17)}\n        {this.colhour(time[18],slot,18)}\n        {this.colhour(time[19],slot,19)}\n        {this.colhour(time[20],slot,20)}\n      </Row>\n      <Row className=\"timeslot\">\n        {this.colhour(time[21],slot,21)}\n        {this.colhour(time[22],slot,22)}\n        {this.colhour(time[23],slot,23)}\n        {this.colhour(time[24],slot,24)}\n        {this.colhour(time[25],slot,25)}\n      </Row>\n    </Grid>\n      \n    );\n  }\n}\n\nexport default Timeslots; ","import React from 'react';\nimport {\n  Modal,\n  Button,\n} from 'react-bootstrap';\n\n\n\nclass TsModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handlePostReq = this.handlePostReq.bind(this);\n    this.state = {\n      \n    };\n    \n  }\n\n  handlePostReq(item,str,amount) {\n    // eslint-disable-next-line\n    item.keeptime = item.keeptime + \" \" + str;\n    fetch('/adminbook', {\n      method: 'POST',\n      body: JSON.stringify({\n        item : item,\n        amount : amount\n      }),\n      headers:{\n        'Content-Type': 'application/json'\n      }\n     }).then((res) => res.json())\n     .then((data) =>  console.log(data))\n     .catch((err)=>console.log(err));\n  }\n\n  render() {\n    var item = this.props.modalid;\n    var slot = this.props.popoverlist;\n    var count = this.props.count;\n    var dis = [false,false,false,false,false];\n    if(slot && item) {\n      \n      if(slot[count].p1 === 'Booked') {\n        dis[0] = true;\n      }\n      if(slot[count].p2 === 'Booked') {\n        dis[1] = true;\n      }\n      if(slot[count].s1 === 'Booked') {\n        dis[2] = true;\n      }\n      if(slot[count].s2 === 'Booked') {\n        dis[3] = true;\n      }\n      if(slot[count].s3 === 'Booked') {\n        dis[4] = true;\n      }\n      if(slot[count].s4 === 'Booked') {\n        dis[5] = true;\n      }\n      if(slot[count].s5 === 'Booked') {\n        dis[6] = true;\n      }\n    } \n    \n    return (\n      \t<Modal show={this.props.show} onHide={this.props.onhide}>\n          <Modal.Header closeButton>\n          <Modal.Title>Book Tables</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>            \n            <hr />\n            <Button disabled = {dis[0]} bsStyle=\"primary\" bsSize=\"small\" onClick={() => { this.handlePostReq(item, 'Pool Table 1',5)}}  >Pool table 1 </Button>\n            <Button disabled = {dis[1]} bsStyle=\"primary\" bsSize=\"small\" onClick={() => { this.handlePostReq(item, 'Pool Table 2',5)}} >Pool table 2</Button>\n            <Button disabled = {dis[2]} bsStyle=\"primary\" bsSize=\"small\" onClick={() => { this.handlePostReq(item, 'Snooker Table 1',10)}} >Snooker table 1</Button>\n            <Button disabled = {dis[3]} bsStyle=\"primary\" bsSize=\"small\" onClick={() => { this.handlePostReq(item, 'Snooker Table 2',10)}} >Snooker table 2</Button>\n            <Button disabled = {dis[4]} bsStyle=\"primary\" bsSize=\"small\" onClick={() => { this.handlePostReq(item, 'Snooker Table 3',10)}} >Snooker table 3</Button>\n            <Button disabled = {dis[5]} bsStyle=\"primary\" bsSize=\"small\" onClick={() => { this.handlePostReq(item, 'Snooker Table 4',10)}} >Snooker table 4</Button>\n            <Button disabled = {dis[6]} bsStyle=\"primary\" bsSize=\"small\" onClick={() => { this.handlePostReq(item, 'Snooker Table 5',10)}} >Snooker table 5</Button>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button onClick={this.props.onclick}>Close</Button>\n          </Modal.Footer>\n        </Modal>\n    );\n  }\n}\n\nexport default TsModal;","import React from 'react';\n\nclass LsFoosball extends React.Component {\n    constructor(props, context) {\n      super(props, context);\n  \n      this.handleChange = this.handleChange.bind(this);\n      this.handlePostReq = this.handlePostReq.bind(this);\n  \n      this.state = {\n        player1 : '',\n        player2 : '',\n        player3 : '',\n        player4 : '',\n        link : ''\n      };\n    }\n\n    handlePostReq() {\n      // eslint-disable-next-line\n      var val = this.state;\n      console.log(val); \n      fetch('/lsfoosball', {\n        method: 'POST',\n        body: JSON.stringify({\n          value: val\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n      },\n       }).then((res) => res.json())\n       .then((data) =>  console.log(data))\n       .catch((err)=>console.log(err));\n    }\n  \n  \n    handleChange = (e) => {\n      let newState = {}\n     \n      newState[e.target.name] = e.target.value\n     \n      this.setState(newState)\n     }\n  \n    render() {\n      return (\n        <div className=\"container\">\n        <h2>Foosball 4 Players</h2>\n        <form onSubmit={this.handlePostReq}>     \n            <fieldset className='form-group'>\n            <label htmlFor='formName' title='Player 1 Name: '> Player 1 Name</label>    \n            <input id='Player1Name' className='form-input' name='player1' type='text' required onChange={this.handleChange} value={this.state.player1} />\n            </fieldset>\n            \n            <fieldset className='form-group'>\n            <label htmlFor='formEmail' title='Player 2 Name: '>Player 2 Name</label> \n            <input id='Player2Name' className='form-input' name='player2' type='text' required onChange={this.handleChange} value={this.state.player2} />\n            </fieldset>\n            \n            <fieldset className='form-group'>\n            <label htmlFor='formEmail' title='Player 3 Name' >Player 3 Name</label>\n            <input id='Player3Name' className='form-input' name='player3' type='text' required onChange={this.handleChange} value={this.state.player3} />\n            </fieldset>\n            \n            <fieldset className='form-group'>\n            <label htmlFor='formEmail' title='Player 4 Name' >Player 4 Name</label>\n            <input id='Player4Name' className='form-input' name='player4' type='text' required onChange={this.handleChange} value={this.state.player4} />\n            </fieldset>\n            \n            <fieldset className='form-group'>\n            <label htmlFor='formEmail' title='link' >Link</label>\n            <input id='link' className='form-input' name='link' type='text' required onChange={this.handleChange} value={this.state.link} />\n            </fieldset>\n            \n            <div className='form-group'>\n              <input id='formButton' className='btn' type='submit' placeholder='Submit' />\n            </div>\n        </form>\n      </div>\n      );\n    }\n  }\n  \nexport default LsFoosball;\n","import React, { Component } from 'react';\nimport {\n  Grid,\n  Row,\n  Col,\n  Button,\n  OverlayTrigger,\n  Popover,\n} from 'react-bootstrap';\nimport './App.css';\nimport TsModal from'./AdminTsmodal';\n\n// declaring variable for \nclass Timeslots extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleShow = this.handleShow.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleButPush = this.handleButPush.bind(this);\n    this.colhour = this.colhour.bind(this);\n    this.handlePopoverList = this.handlePopoverList.bind(this);\n    this.state = {\n      show: false, \n      buttonPush: 'invalid',\n      count : 0,\n      result: [],  \n      time : ['10:00-10:30', '10:30-11:00', '11:00-11:30', '11:30-12:00', '12:00-12:30', '12:30-13:00', '13:00-13:30', '13:30-14:00', '14:00-14:30', '14:30-15:00', '15:00-15:30', '15:30-16:00', '16:00-16:30', '16:30-17:00', '17:00-17:30', '17:30-18:00', '18:00-18:30', '19:00-19:30','19:30-20:00', '20:00-20:30', '20:30-21:00', '21:00-21:30', '22:00-22:30', '22:30-23:00', '23:00-23:30', '23:30-24:00'],\n      popoverlist : [{'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},\n      {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},\n      {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},\n      {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},\n      {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},\n      {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},\n      {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},\n      {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},\n      {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},\n      {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},\n      {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},\n      {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},\n      {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},\n      {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},\n      {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},\n      {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},\n      {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},\n      {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},\n      {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},\n      {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},\n      {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},\n      {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},\n      {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},\n      {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},\n      {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},\n      {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},\n      {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},\n      {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\", 's4' : \"Available\", 's5' : \"Available\"},                    \n     ],\n    };\n  }\n\n  componentDidMount() {\n    this.getList();\n  }\n\n  getList = () => {\n    \n    fetch(\"/mznFag7kV7\")\n    .then(res => res.json())\n    .then(result => this.setState({ result }))\n  }\n\n  handleClose() {\n    this.setState({ show: false });\n  }\n\n  handleShow() {\n    this.setState({ show: true });\n  }\n  handleButPush(val,count) {\n    this.setState({ buttonpush: val , count: count});\n  }\n\n  handlePopoverList(keeptime,butdisable, count) {\n    const newList = this.state.popoverlist.slice();\n    if(butdisable) {\n      for (var i=0; i < butdisable.length; i++) {\n        if(butdisable[i].TableTime === keeptime) {\n          if(butdisable[i].TableType === 'Pool Table 1') {\n            newList[count].p1 = 'Booked';\n          }\n          if(butdisable[i].TableType === 'Pool Table 2') {\n            newList[count].p2 = 'Booked';\n          }\n          if(butdisable[i].TableType === 'Snooker Table 1') {\n            newList[count].s1 = 'Booked';\n          }\n          if(butdisable[i].TableType === 'Snooker Table 2') {\n            newList[count].s2 = 'Booked';\n          }\n          if(butdisable[i].TableType === 'Snooker Table 3') {\n            newList[count].s3 = 'Booked';\n          }\n          if(butdisable[i].TableType === 'Snooker Table 4') {\n            newList[count].s4 = 'Booked';\n          }\n          if(butdisable[i].TableType === 'Snooker Table 5') {\n            newList[count].s5 = 'Booked';\n          }\n        }\n      }\n      this.setState({popoverlist : newList});\n    }\n\n  }\n\n  popoverHoverFocus(count) {\n  return(\n  <Popover id=\"popover-trigger-hover-focus\" title=\"Table status\">\n    <strong >P1 -> {this.state.popoverlist[count].p1}</strong> <br />\n    <strong >P2 -> {this.state.popoverlist[count].p2}</strong> <br />\n    <strong >S1 -> {this.state.popoverlist[count].s1}</strong> <br />\n    <strong >S2 -> {this.state.popoverlist[count].s2}</strong> <br />\n    <strong >S3 -> {this.state.popoverlist[count].s3}</strong> <br />\n    <strong >S4 -> {this.state.popoverlist[count].s4}</strong> <br />\n    <strong >S5 -> {this.state.popoverlist[count].s5}</strong> <br />\n  </Popover>\n  );\n  } \n  \n  \n  colhour(keeptime,butdisable,count) {\n    return(  \n        <Col className='halfhour' xs={4} md={1}>\n          <TsModal modalid = {this.state.buttonpush} popoverlist = {this.state.popoverlist} count = {this.state.count} show={this.state.show} onhide={this.handleClose} onclick={this.handleClose}   />\n            <OverlayTrigger overlay = {this.popoverHoverFocus(count)}>\n              <Button bsStyle=\"primary\" bsSize=\"small\" onMouseEnter={() => {this.handlePopoverList(keeptime, butdisable, count);}} onClick={() => { this.handleShow(); this.handleButPush({keeptime},count); }}>\n                {keeptime} \n              </Button>\n            </OverlayTrigger>\n        </Col>\n    );\n  }\n\n  render() { \n    const { result } = this.state;\n    if(result) {\n    var slot = result;\n    } \n    var time = this.state.time;\n    return (\n    <Grid>\n     <br></br>\n      <Row className=\"timeslot\">\n        {this.colhour(time[0],slot,0)}\n        {this.colhour(time[1],slot,1)}\n        {this.colhour(time[2],slot,2)}\n        {this.colhour(time[3],slot,3)}\n        {this.colhour(time[4],slot,4)}\n        {this.colhour(time[5],slot,5)}\n        {this.colhour(time[6],slot,6)}\n      </Row>\n      <Row className=\"timeslot\">\n        {this.colhour(time[7],slot,7)}\n        {this.colhour(time[8],slot,8)}\n        {this.colhour(time[9],slot,9)}\n        {this.colhour(time[10],slot,10)}\n        {this.colhour(time[11],slot,11)}\n        {this.colhour(time[12],slot,12)}\n        {this.colhour(time[13],slot,13)}\n      </Row>\n      <Row className=\"timeslot\">\n        {this.colhour(time[14],slot,14)}\n        {this.colhour(time[15],slot,15)}\n        {this.colhour(time[16],slot,16)}\n        {this.colhour(time[17],slot,17)}\n        {this.colhour(time[18],slot,18)}\n        {this.colhour(time[19],slot,19)}\n        {this.colhour(time[20],slot,20)}\n      </Row>\n      <Row className=\"timeslot\">\n        {this.colhour(time[21],slot,21)}\n        {this.colhour(time[22],slot,22)}\n        {this.colhour(time[23],slot,23)}\n        {this.colhour(time[24],slot,24)}\n        {this.colhour(time[25],slot,25)}\n      </Row>\n    </Grid>\n      \n    );\n  }\n}\n\nexport default Timeslots; ","import React, { Component } from 'react';\n\nimport Login from './AdminTimeslots';\nimport './App.css';\n\nclass LoginAdmin extends Component {\n    constructor(props, context) {\n        super(props, context);\n    \n        this.handleChange = this.handleChange.bind(this);\n        \n        this.state = {\n          pass : '',\n          result : ''\n        };\n      }\n    \n      componentDidMount() {\n        this.getList();\n      }\n    \n      getList = () => {\n        \n        fetch(\"/admin\", {method : 'POST'})\n        .then(res => res.json())\n        .then(result => this.setState({ result }))\n      }\n    \n    handleChange = (e) => {\n        let newState = {}\n       \n        newState[e.target.name] = e.target.value\n       \n        this.setState(newState)\n       }\n    \n    render() { \n        const {result} = this.state;\n        var admin;\n        if(this.state.pass === result){\n            admin = <Login />\n        }\n\n        return (\n            <div className ='container'>\n            <form>\n            <fieldset className='form-group'>\n                <label htmlFor='formName' title='Enter Admin Pass' style={{color: 'white'}}> Admin Pass </label>    \n                <input id='AdminCheck' className='form-input' name='pass' type='password' required onChange={this.handleChange} value={this.state.pass} />\n            </fieldset>\n            \n            </form>\n\n            {admin}\n            </div>\n        )\n    }\n}\n\nexport default LoginAdmin;\n","import React, { Component } from \"react\";\nimport Iframe from 'react-iframe'\nimport './App.css';\n\nclass Foosball extends Component {\n    constructor(props, context) {\n        super(props, context);\n    \n        this.state = {\n          result: []\n        };\n    }\n    \n      componentDidMount() {\n        this.getList();\n      }\n    \n      getList = () => {  \n        fetch(\"/foosballstream\", {method : 'POST'})\n        .then(res => res.json())\n        .then(result => this.setState({ result }))\n      }\n    \n  render() {\n    const { result } = this.state;\n    if(result[0])\n    {\n        var p1 = result[0].Player1;\n        var p2 = result[0].Player2;\n        var p3 = result[0].Player3;\n        var p4 = result[0].Player4;\n        var link = result[0].Link;\n    }\n    return (\n        <div className='container' id='main'>\n          <h1 className='head'>Foosball Live Stream</h1>\n          <ul className=\"header\">\n            <li>Player 1 : {p1}</li>\n            <li>Player 2 : {p2}</li>\n            <li>Player 3 : {p3}</li>\n            <li>Player 4 : {p4}</li>\n          </ul>\n          <Iframe url={link}\n            width=\"560px\"\n            height=\"315px\"\n            id=\"myId\"\n            className=\"myClassname\"\n            display=\"initial\"\n            position=\"relative\"\n            allowFullScreen/>\n        </div>\n    );\n  }\n}\n \nexport default Foosball;","import React from 'react';\n\nclass LsCarrom extends React.Component {\n    constructor(props, context) {\n      super(props, context);\n  \n      this.handleChange = this.handleChange.bind(this);\n      this.handlePostReq = this.handlePostReq.bind(this);\n  \n      this.state = {\n        player1 : '',\n        player2 : '',\n        player3 : '',\n        player4 : '',\n        link : ''\n      };\n    }\n\n    handlePostReq() {\n      // eslint-disable-next-line\n      var val = this.state;\n      console.log(val); \n      fetch('/lscarrom', {\n        method: 'POST',\n        body: JSON.stringify({\n          value: val\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n      },\n       }).then((res) => res.json())\n       .then((data) =>  console.log(data))\n       .catch((err)=>console.log(err));\n    }\n  \n  \n    handleChange = (e) => {\n      let newState = {}\n     \n      newState[e.target.name] = e.target.value\n     \n      this.setState(newState)\n     }\n  \n    render() {\n      return (\n        <div className=\"container\">\n        <h2>Carrom Players</h2>\n        <form onSubmit={this.handlePostReq}>     \n            <fieldset className='form-group'>\n            <label htmlFor='formName' title='Player 1 Name: '> Player 1 Name</label>    \n            <input id='Player1Name' className='form-input' name='player1' type='text' required onChange={this.handleChange} value={this.state.player1} />\n            </fieldset>\n            \n            <fieldset className='form-group'>\n            <label htmlFor='formEmail' title='Player 2 Name: '>Player 2 Name</label> \n            <input id='Player2Name' className='form-input' name='player2' type='text' required onChange={this.handleChange} value={this.state.player2} />\n            </fieldset>\n            \n            <fieldset className='form-group'>\n            <label htmlFor='formEmail' title='Player 3 Name' >Player 3 Name</label>\n            <input id='Player3Name' className='form-input' name='player3' type='text' required onChange={this.handleChange} value={this.state.player3} />\n            </fieldset>\n            \n            <fieldset className='form-group'>\n            <label htmlFor='formEmail' title='Player 4 Name' >Player 4 Name</label>\n            <input id='Player4Name' className='form-input' name='player4' type='text' required onChange={this.handleChange} value={this.state.player4} />\n            </fieldset>\n            \n            <fieldset className='form-group'>\n            <label htmlFor='formEmail' title='link' >Link</label>\n            <input id='link' className='form-input' name='link' type='text' required onChange={this.handleChange} value={this.state.link} />\n            </fieldset>\n            \n            <div className='form-group'>\n              <input id='formButton' className='btn' type='submit' placeholder='Submit' />\n            </div>\n        </form>\n      </div>\n      );\n    }\n  }\n  \nexport default LsCarrom;\n","import React, {Component} from \"react\";\nimport Iframe from 'react-iframe'\nimport './App.css';\nclass Carrom extends Component {\n    constructor(props, context) {\n        super(props, context);\n    \n        this.state = {\n          result: []\n        };\n    }\n    \n      componentDidMount() {\n        this.getList();\n      }\n    \n      getList = () => {  \n        fetch(\"/carromstream\", {method : 'POST'})\n        .then(res => res.json())\n        .then(result => this.setState({ result }))\n      }\n    \n  render() {\n    const { result } = this.state;\n    if(result[0])\n    {\n        var p1 = result[0].Player1;\n        var p2 = result[0].Player2;\n        var p3 = result[0].Player3;\n        var p4 = result[0].Player4;\n        var link = result[0].Link;\n    }\n    return (\n        <div className='container' id='main'>\n          <h1 className='head'>Carrom Live Stream</h1>\n          <ul className=\"header\">\n            <li>Player 1 : {p1}</li>\n            <li>Player 2 : {p2}</li>\n            <li>Player 3 : {p3}</li>\n            <li>Player 4 : {p4}</li>\n          </ul>\n          <Iframe url={link}\n            width=\"560px\"\n            height=\"315px\"\n            id=\"myId\"\n            className=\"myClassname\"\n            display=\"initial\"\n            position=\"relative\"\n            allowFullScreen/>\n        </div>\n    );\n  }\n}\n \nexport default Carrom;","import React from 'react';\n\nclass LsChess extends React.Component {\n    constructor(props, context) {\n      super(props, context);\n  \n      this.handleChange = this.handleChange.bind(this);\n      this.handlePostReq = this.handlePostReq.bind(this);\n  \n      this.state = {\n        player1 : '',\n        player2 : '',\n        player3 : '',\n        player4 : '',\n        link : ''\n      };\n    }\n\n    handlePostReq() {\n      // eslint-disable-next-line\n      var val = this.state;\n      console.log(val); \n      fetch('/lschess', {\n        method: 'POST',\n        body: JSON.stringify({\n          value: val\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n      },\n       }).then((res) => res.json())\n       .then((data) =>  console.log(data))\n       .catch((err)=>console.log(err));\n    }\n  \n  \n    handleChange = (e) => {\n      let newState = {}\n     \n      newState[e.target.name] = e.target.value\n     \n      this.setState(newState)\n     }\n  \n    render() {\n      return (\n        <div className=\"container\">\n        <h2>Chess Players</h2>\n        <form onSubmit={this.handlePostReq}>     \n            <fieldset className='form-group'>\n            <label htmlFor='formName' title='Player 1 Name: '> Player 1 Name</label>    \n            <input id='Player1Name' className='form-input' name='player1' type='text' required onChange={this.handleChange} value={this.state.player1} />\n            </fieldset>\n            \n            <fieldset className='form-group'>\n            <label htmlFor='formEmail' title='Player 2 Name: '>Player 2 Name</label> \n            <input id='Player2Name' className='form-input' name='player2' type='text' required onChange={this.handleChange} value={this.state.player2} />\n            </fieldset>\n                \n            <fieldset className='form-group'>\n            <label htmlFor='formEmail' title='link' >Link</label>\n            <input id='link' className='form-input' name='link' type='text' required onChange={this.handleChange} value={this.state.link} />\n            </fieldset>\n            \n            <div className='form-group'>\n              <input id='formButton' className='btn' type='submit' placeholder='Submit' />\n            </div>\n        </form>\n      </div>\n      );\n    }\n  }\n  \nexport default LsChess;\n","import React, { Component } from \"react\";\nimport Iframe from 'react-iframe'\nimport './App.css';\nclass Chess extends Component {\n    constructor(props, context) {\n        super(props, context);\n    \n        this.state = {\n          result: []\n        };\n    }\n    \n      componentDidMount() {\n        this.getList();\n      }\n    \n      getList = () => {  \n        fetch(\"/chessstream\", {method : 'POST'})\n        .then(res => res.json())\n        .then(result => this.setState({ result }))\n      }\n    \n  render() {\n    const { result } = this.state;\n    if(result[0])\n    {\n        var p1 = result[0].Player1;\n        var p2 = result[0].Player2;\n        var link = result[0].Link;\n    }\n    return (\n        <div className='container' id='main' style={{paddingBottom:'389px'}}>\n          <h1 className='head'>Chess Live Stream</h1>\n          <ul className=\"header\">\n            <li>Player 1 : {p1}</li>\n            <li>Player 2 : {p2}</li>\n          </ul>\n          <Iframe url={link}\n            width=\"560px\"\n            height=\"315px\"\n            id=\"myId\"\n            className=\"myClassname\"\n            display=\"initial\"\n            position=\"relative\"\n            allowFullScreen/>\n        </div>\n    );\n  }\n}\n \nexport default Chess;","import React from 'react';\n\nclass LsPool extends React.Component {\n    constructor(props, context) {\n      super(props, context);\n  \n      this.handleChange = this.handleChange.bind(this);\n      this.handlePostReq = this.handlePostReq.bind(this);\n  \n      this.state = {\n        player1 : '',\n        player2 : '',\n        player3 : '',\n        player4 : '',\n        link : ''\n      };\n    }\n\n    handlePostReq() {\n      // eslint-disable-next-line\n      var val = this.state;\n      console.log(val); \n      fetch('/lspool', {\n        method: 'POST',\n        body: JSON.stringify({\n          value: val\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n      },\n       }).then((res) => res.json())\n       .then((data) =>  console.log(data))\n       .catch((err)=>console.log(err));\n    }\n  \n  \n    handleChange = (e) => {\n      let newState = {}\n     \n      newState[e.target.name] = e.target.value\n     \n      this.setState(newState)\n     }\n  \n    render() {\n      return (\n        <div className=\"container\">\n        <h2>Pool Players</h2>\n        <form onSubmit={this.handlePostReq}>     \n            <fieldset className='form-group'>\n            <label htmlFor='formName' title='Player 1 Name: '> Player 1 Name</label>    \n            <input id='Player1Name' className='form-input' name='player1' type='text' required onChange={this.handleChange} value={this.state.player1} />\n            </fieldset>\n            \n            <fieldset className='form-group'>\n            <label htmlFor='formEmail' title='Player 2 Name: '>Player 2 Name</label> \n            <input id='Player2Name' className='form-input' name='player2' type='text' required onChange={this.handleChange} value={this.state.player2} />\n            </fieldset>\n            \n            <fieldset className='form-group'>\n            <label htmlFor='formEmail' title='Player 3 Name' >Player 3 Name</label>\n            <input id='Player3Name' className='form-input' name='player3' type='text' required onChange={this.handleChange} value={this.state.player3} />\n            </fieldset>\n            \n            <fieldset className='form-group'>\n            <label htmlFor='formEmail' title='Player 4 Name' >Player 4 Name</label>\n            <input id='Player4Name' className='form-input' name='player4' type='text' required onChange={this.handleChange} value={this.state.player4} />\n            </fieldset>\n            \n            <fieldset className='form-group'>\n            <label htmlFor='formEmail' title='link' >Link</label>\n            <input id='link' className='form-input' name='link' type='text' required onChange={this.handleChange} value={this.state.link} />\n            </fieldset>\n            \n            <div className='form-group'>\n              <input id='formButton' className='btn' type='submit' placeholder='Submit' />\n            </div>\n        </form>\n      </div>\n      );\n    }\n  }\n  \nexport default LsPool;\n","import React, { Component } from \"react\";\nimport Iframe from 'react-iframe'\nimport './App.css';\nclass Pool extends Component {\n    constructor(props, context) {\n        super(props, context);\n    \n        this.state = {\n          result: []\n        };\n    }\n    \n      componentDidMount() {\n        this.getList();\n      }\n    \n      getList = () => {  \n        fetch(\"/poolstream\", {method : 'POST'})\n        .then(res => res.json())\n        .then(result => this.setState({ result }))\n      }\n    \n  render() {\n    const { result } = this.state;\n    if(result[0])\n    {\n        var p1 = result[0].Player1;\n        var p2 = result[0].Player2;\n        var p3 = result[0].Player3;\n        var p4 = result[0].Player4;\n        var link = result[0].Link;\n    }\n    return (\n        <div className='container' id='main'>\n          <h1 className='head'>Pool Live Stream</h1>\n          <ul className=\"header\">\n            <li>Player 1 : {p1}</li>\n            <li>Player 2 : {p2}</li>\n            <li>Player 3 : {p3}</li>\n            <li>Player 4 : {p4}</li>\n          </ul>\n          <Iframe url={link}\n            width=\"560px\"\n            height=\"315px\"\n            id=\"myId\"\n            className=\"myClassname\"\n            display=\"initial\"\n            position=\"relative\"\n            allowFullScreen/>\n        </div>\n    );\n  }\n}\n \nexport default Pool;","import React from 'react';\n\nclass LsSnooker extends React.Component {\n    constructor(props, context) {\n      super(props, context);\n  \n      this.handleChange = this.handleChange.bind(this);\n      this.handlePostReq = this.handlePostReq.bind(this);\n  \n      this.state = {\n        player1 : '',\n        player2 : '',\n        player3 : '',\n        player4 : '',\n        link : ''\n      };\n    }\n\n    handlePostReq() {\n      // eslint-disable-next-line\n      var val = this.state;\n      console.log(val); \n      fetch('/lssnooker', {\n        method: 'POST',\n        body: JSON.stringify({\n          value: val\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n      },\n       }).then((res) => res.json())\n       .then((data) =>  console.log(data))\n       .catch((err)=>console.log(err));\n    }\n  \n  \n    handleChange = (e) => {\n      let newState = {}\n     \n      newState[e.target.name] = e.target.value\n     \n      this.setState(newState)\n     }\n  \n    render() {\n      return (\n        <div className=\"container\">\n        <h2>Snooker Players</h2>\n        <form onSubmit={this.handlePostReq}>     \n            <fieldset className='form-group'>\n            <label htmlFor='formName' title='Player 1 Name: '> Player 1 Name</label>    \n            <input id='Player1Name' className='form-input' name='player1' type='text' required onChange={this.handleChange} value={this.state.player1} />\n            </fieldset>\n            \n            <fieldset className='form-group'>\n            <label htmlFor='formEmail' title='Player 2 Name: '>Player 2 Name</label> \n            <input id='Player2Name' className='form-input' name='player2' type='text' required onChange={this.handleChange} value={this.state.player2} />\n            </fieldset>\n            \n            <fieldset className='form-group'>\n            <label htmlFor='formEmail' title='Player 3 Name' >Player 3 Name</label>\n            <input id='Player3Name' className='form-input' name='player3' type='text' required onChange={this.handleChange} value={this.state.player3} />\n            </fieldset>\n            \n            <fieldset className='form-group'>\n            <label htmlFor='formEmail' title='Player 4 Name' >Player 4 Name</label>\n            <input id='Player4Name' className='form-input' name='player4' type='text' required onChange={this.handleChange} value={this.state.player4} />\n            </fieldset>\n            \n            <fieldset className='form-group'>\n            <label htmlFor='formEmail' title='link' >Link</label>\n            <input id='link' className='form-input' name='link' type='text' required onChange={this.handleChange} value={this.state.link} />\n            </fieldset>\n            \n            <div className='form-group'>\n              <input id='formButton' className='btn' type='submit' placeholder='Submit' />\n            </div>\n        </form>\n      </div>\n      );\n    }\n  }\n  \nexport default LsSnooker;\n","import React, { Component } from \"react\";\nimport Iframe from 'react-iframe'\nimport './App.css';\nclass Snooker extends Component {\n    constructor(props, context) {\n        super(props, context);\n    \n        this.state = {\n          result: []\n        };\n    }\n    \n      componentDidMount() {\n        this.getList();\n      }\n    \n      getList = () => {  \n        fetch(\"/snookerstream\", {method : 'POST'})\n        .then(res => res.json())\n        .then(result => this.setState({ result }))\n      }\n    \n  render() {\n    const { result } = this.state;\n    if(result[0])\n    {\n        var p1 = result[0].Player1;\n        var p2 = result[0].Player2;\n        var p3 = result[0].Player3;\n        var p4 = result[0].Player4;\n        var link = result[0].Link;\n    }\n    return (\n        <div className='container' id='main'>\n          <h1 className='head'>Snooker Live Stream</h1>\n          <ul className=\"header\">\n            <li>Player 1 : {p1}</li>\n            <li>Player 2 : {p2}</li>\n            <li>Player 3 : {p3}</li>\n            <li>Player 4 : {p4}</li>\n          </ul>\n          <Iframe url={link}\n            width=\"560px\"\n            height=\"315px\"\n            id=\"myId\"\n            className=\"myClassname\"\n            display=\"initial\"\n            position=\"relative\"\n            allowFullScreen/>\n        </div>\n    );\n  }\n}\n \nexport default Snooker;","import React, { Component } from 'react';\nimport { Card, CardTitle, CardText,\n    CardSubtitle, CardBody } from 'reactstrap';\n    import { \n      Row,\n      Col,\n      Grid\n    } from 'react-bootstrap';\nimport './App.css';\n\nvar sectionStyle = {\n  width: \"100%\",\n  height: '100%',\n  paddingBottom:'200px',\n  color:'white',\n  overflowX: 'hidden'\n};\n\n\n// function getIndex(arr,value) {\n//   for(var i = 0; i < arr.length; i++) {\n//       if(arr[i] === value) {\n//           return i;\n//       }\n//   }\n//   return -1; //to handle the case where the value doesn't exist\n// }\n\n\nclass TableBookingStatus extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      result: [],\n      } \n  }\n\n  componentDidMount() {\n    this.getList();\n  }\n\n  getList = () => {\n    fetch(\"/mznFag7kV7\")\n    .then(res => res.json())\n    .then(result => this.setState({ result }))\n  }\n\n  render() {\n    const { result} = this.state;\n    if(result[0]) {\n       var timesP1 = ['10:00-10:30', '10:30-11:00', '11:00-11:30', '11:30-12:00', '12:00-12:30', '12:30-13:00', '13:00-13:30', '13:30-14:00', '14:00-14:30', '14:30-15:00', '15:00-15:30', '15:30-16:00', '16:00-16:30', '16:30-17:00', '17:00-17:30', '17:30-18:00', '18:00-18:30', '19:00-19:30','19:30-20:00', '20:00-20:30', '20:30-21:00', '21:00-21:30', '22:00-22:30', '22:30-23:00', '23:00-23:30', '23:30-24:00'];\n       var timesP2 = ['10:00-10:30', '10:30-11:00', '11:00-11:30', '11:30-12:00', '12:00-12:30', '12:30-13:00', '13:00-13:30', '13:30-14:00', '14:00-14:30', '14:30-15:00', '15:00-15:30', '15:30-16:00', '16:00-16:30', '16:30-17:00', '17:00-17:30', '17:30-18:00', '18:00-18:30', '19:00-19:30','19:30-20:00', '20:00-20:30', '20:30-21:00', '21:00-21:30', '22:00-22:30', '22:30-23:00', '23:00-23:30', '23:30-24:00'];\n       var timesS1 = ['10:00-10:30', '10:30-11:00', '11:00-11:30', '11:30-12:00', '12:00-12:30', '12:30-13:00', '13:00-13:30', '13:30-14:00', '14:00-14:30', '14:30-15:00', '15:00-15:30', '15:30-16:00', '16:00-16:30', '16:30-17:00', '17:00-17:30', '17:30-18:00', '18:00-18:30', '19:00-19:30','19:30-20:00', '20:00-20:30', '20:30-21:00', '21:00-21:30', '22:00-22:30', '22:30-23:00', '23:00-23:30', '23:30-24:00'];\n       var timesS2 = ['10:00-10:30', '10:30-11:00', '11:00-11:30', '11:30-12:00', '12:00-12:30', '12:30-13:00', '13:00-13:30', '13:30-14:00', '14:00-14:30', '14:30-15:00', '15:00-15:30', '15:30-16:00', '16:00-16:30', '16:30-17:00', '17:00-17:30', '17:30-18:00', '18:00-18:30', '19:00-19:30','19:30-20:00', '20:00-20:30', '20:30-21:00', '21:00-21:30', '22:00-22:30', '22:30-23:00', '23:00-23:30', '23:30-24:00'];\n       var timesS3 = ['10:00-10:30', '10:30-11:00', '11:00-11:30', '11:30-12:00', '12:00-12:30', '12:30-13:00', '13:00-13:30', '13:30-14:00', '14:00-14:30', '14:30-15:00', '15:00-15:30', '15:30-16:00', '16:00-16:30', '16:30-17:00', '17:00-17:30', '17:30-18:00', '18:00-18:30', '19:00-19:30','19:30-20:00', '20:00-20:30', '20:30-21:00', '21:00-21:30', '22:00-22:30', '22:30-23:00', '23:00-23:30', '23:30-24:00'];\n       var timesS4 = ['10:00-10:30', '10:30-11:00', '11:00-11:30', '11:30-12:00', '12:00-12:30', '12:30-13:00', '13:00-13:30', '13:30-14:00', '14:00-14:30', '14:30-15:00', '15:00-15:30', '15:30-16:00', '16:00-16:30', '16:30-17:00', '17:00-17:30', '17:30-18:00', '18:00-18:30', '19:00-19:30','19:30-20:00', '20:00-20:30', '20:30-21:00', '21:00-21:30', '22:00-22:30', '22:30-23:00', '23:00-23:30', '23:30-24:00'];\n       var timesS5 = ['10:00-10:30', '10:30-11:00', '11:00-11:30', '11:30-12:00', '12:00-12:30', '12:30-13:00', '13:00-13:30', '13:30-14:00', '14:00-14:30', '14:30-15:00', '15:00-15:30', '15:30-16:00', '16:00-16:30', '16:30-17:00', '17:00-17:30', '17:30-18:00', '18:00-18:30', '19:00-19:30','19:30-20:00', '20:00-20:30', '20:30-21:00', '21:00-21:30', '22:00-22:30', '22:30-23:00', '23:00-23:30', '23:30-24:00'];\n\n       for(var i=0; i<result.length; i++) {\n          if(result[i].TableType === 'Pool Table 1') {\n            var index = timesP1.indexOf(result[i].TableTime);\n            timesP1.splice(index, 1);\n          }\n          else if(result[i].TableType === 'Pool Table 2') {\n            index = timesP2.indexOf(result[i].TableTime);\n            timesP2.splice(index, 1);\n          }\n          else if(result[i].TableType === 'Snooker Table 1') {\n            index = timesS1.indexOf(result[i].TableTime);\n            timesS1.splice(index, 1);\n          }\n          else if(result[i].TableType === 'Snooker Table 2') {\n            index = timesS2.indexOf(result[i].TableTime);\n            timesS2.splice(index, 1);\n          }\n          else if(result[i].TableType === 'Snooker Table 3') {\n            index = timesS3.indexOf(result[i].TableTime);\n            timesS3.splice(index, 1);\n          }\n          else if(result[i].TableType === 'Snooker Table 4') {\n            var index = timesS3.indexOf(result[i].TableTime);\n            timesS3.splice(index, 1);\n          }\n          else if(result[i].TableType === 'Snooker Table 5') {\n            var index = timesS3.indexOf(result[i].TableTime);\n            timesS3.splice(index, 1);\n          }\n       }\n       timesP1 = timesP1.map(function(value){\n        return <li style={{backgroundColor:'white', color:'black', width:'80px', paddingBottom:'2px', marginBottom:'5px', borderRadius:'8px',paddingLeft:'3px'}}> {value} </li>;\n      });\n\n      timesP2 = timesP2.map(function(value){\n        return <li style={{backgroundColor:'white', color:'black', width:'80px', paddingBottom:'2px', marginBottom:'5px', borderRadius:'8px',paddingLeft:'3px'}}> {value} </li>;\n      });\n\n      timesS1 = timesS1.map(function(value){\n        return <li style={{backgroundColor:'white', color:'black', width:'80px', paddingBottom:'2px', marginBottom:'5px', borderRadius:'8px',paddingLeft:'3px'}}> {value} </li>;\n      });\n\n      timesS2 = timesS2.map(function(value){\n        return <li style={{backgroundColor:'white', color:'black', width:'80px', paddingBottom:'2px', marginBottom:'5px', borderRadius:'8px',paddingLeft:'3px'}}> {value} </li>;\n      });\n\n      timesS3 = timesS3.map(function(value){\n        return <li style={{backgroundColor:'white', color:'black', width:'80px', paddingBottom:'2px', marginBottom:'5px', borderRadius:'8px',paddingLeft:'3px'}}> {value} </li>;\n      });\n      timesS4 = timesS4.map(function(value){\n        return <li style={{backgroundColor:'white', color:'black', width:'80px', paddingBottom:'2px', marginBottom:'5px', borderRadius:'8px',paddingLeft:'3px'}}> {value} </li>;\n      });\n      timesS5 = timesS5.map(function(value){\n        return <li style={{backgroundColor:'white', color:'black', width:'80px', paddingBottom:'2px', marginBottom:'5px', borderRadius:'8px',paddingLeft:'3px'}}> {value} </li>;\n      });\n    } \n    \n    return(\n        \n        <Grid style = {sectionStyle}>\n        <Row style={{paddingLeft:'40px', paddingBottom:'40px'}}>\n        <Col className='half' sm={2} xs={5}>\n          <Card body outline color=\"primary\">\n        <CardBody >\n          <CardTitle><h2>Pool Table 1</h2></CardTitle>\n          <CardSubtitle style={{padding: '5px'}}><h4>Tables Vacant</h4></CardSubtitle>\n          <CardText><ul>{timesP1}</ul></CardText>\n        </CardBody>\n        </Card>    \n        </Col>\n       \n        <Col className='half' sm={2} xs={5}>\n          <Card body outline color=\"primary\">\n        <CardBody >\n          <CardTitle><h2>Pool Table 2</h2></CardTitle>\n          <CardSubtitle style={{padding: '5px'}}><h4>Tables Vacant</h4></CardSubtitle>\n          <CardText><ul>{timesP2}</ul></CardText>\n          \n        </CardBody>\n      </Card>\n\n          </Col>\n        </Row>\n        <Row style={{paddingLeft:'40px', paddingBottom:'40px'}}>\n          <Col className='half' sm={2} xs={5} >\n          <Card body outline color=\"primary\">\n        <CardBody >\n          <CardTitle><h2>Snooker Table 1</h2></CardTitle>\n          <CardSubtitle style={{padding: '5px'}}><h4>Tables Vacant</h4></CardSubtitle>\n          <CardText><ul>{timesS1}</ul></CardText>\n          \n        </CardBody>\n      </Card>\n          </Col>\n          \n          <Col className='half' sm={2} xs={5} >\n          <Card body outline color=\"primary\">\n        <CardBody >\n          <CardTitle><h2>Snooker Table 2</h2></CardTitle>\n          <CardSubtitle style={{padding: '5px'}}><h4>Tables Vacant</h4></CardSubtitle>\n          <CardText><ul>{timesS2}</ul></CardText>\n          \n        </CardBody>\n      </Card>\n            \n          </Col>\n          \n          <Col className='half' sm={2} xs={5}>\n          <Card body outline color=\"primary\">\n        <CardBody >\n          <CardTitle><h2>Snooker Table 3</h2></CardTitle>\n          <CardSubtitle style={{padding: '5px'}}><h4>Tables Vacant</h4></CardSubtitle>\n          <CardText><ul>{timesS3}</ul></CardText>\n          \n        </CardBody>\n      </Card>\n          </Col>\n\n          <Col className='half' sm={2} xs={5}>\n          <Card body outline color=\"primary\">\n        <CardBody >\n          <CardTitle><h2>Snooker Table 4</h2></CardTitle>\n          <CardSubtitle style={{padding: '5px'}}><h4>Tables Vacant</h4></CardSubtitle>\n          <CardText><ul>{timesS4}</ul></CardText>\n          \n        </CardBody>\n      </Card>\n          </Col>\n\n          <Col className='half' sm={2} xs={5}>\n          <Card body outline color=\"primary\">\n        <CardBody >\n          <CardTitle><h2>Snooker Table 5</h2></CardTitle>\n          <CardSubtitle style={{padding: '5px'}}><h4>Tables Vacant</h4></CardSubtitle>\n          <CardText><ul>{timesS5}</ul></CardText>\n          \n        </CardBody>\n      </Card>\n          </Col>\n          </Row>  \n    </Grid>        \n    );\n  }\n}\n\nexport default TableBookingStatus; ","import React, { Component } from 'react';\nimport {\n  Grid,\n  Row,\n  Col\n} from 'react-bootstrap';\nimport './App.css';\nimport Select from 'react-select';\n\n\n\nconst PT1options = []\n\n// declaring variable for \nclass TableBooking extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.handlePopoverList = this.handlePopoverList.bind(this);\n    this.state = {\n        popoverlist : [{'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\"},\n        {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\"},\n        {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\"},\n        {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\"},\n        {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\"},\n        {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\"},\n        {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\"},\n        {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\"},\n        {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\"},\n        {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\"},\n        {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\"},\n        {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\"},\n        {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\"},\n        {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\"},\n        {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\"},\n        {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\"},\n        {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\"},\n        {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\"},\n        {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\"},\n        {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\"},\n        {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\"},\n        {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\"},\n        {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\"},\n        {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\"},\n        {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\"},\n        {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\"},\n        {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\"},\n        {'p1': \"Available\", 'p2': \"Available\", 's1' : \"Available\", 's2' : \"Available\" , 's3' : \"Available\"}                    \n       ],\n       time : ['10:00-10:30', '10:30-11:00', '11:00-11:30', '11:30-12:00', '12:00-12:30', '12:30-13:00', '13:00-13:30', '13:30-14:00', '14:00-14:30', '14:30-15:00', '15:00-15:30', '15:30-16:00', '16:00-16:30', '16:30-17:00', '17:00-17:30', '17:30-18:00', '18:00-18:30', '19:00-19:30','19:30-20:00', '20:00-20:30', '20:30-21:00', '21:00-21:30', '22:00-22:30', '22:30-23:00', '23:00-23:30', '23:30-24:00'],\n       result: []\n    }\n  }\n  componentDidMount() {\n    this.getList();\n  }\n\n  \n  getList = () => {\n    \n    fetch(\"/mznFag7kV7\")\n    .then(res => res.json())\n    .then(result => this.setState({ result }))\n  }\n\n  handlePopoverList = () => {\n    const newList = this.state.popoverlist.slice();\n    const {result} = this.state;\n    console.log(result);\n    if(result[0]) {\n      for (var i=0; i < result.length; i++) {\n        if(result[i].TableType === 'Pool Table 1') {\n          PT1options.push(result[i].TableTime);\n        }\n      }\n      this.setState({popoverlist : newList});\n    }\n  }\n  \n  \n\n  render() {\n    const { result } = this.state;\n    if(result === null) {\n      return <div />\n    }\n    if(result) {\n    } \n    return (\n    <Grid>\n    <Row>\n    <Col sm={2}>\n    <Select\n        isMulti\n        name=\"colors\"\n        options = {PT1options}\n        className=\"basic-multi-select\"\n        classNamePrefix=\"select\"\n        \n    />\n    </Col>\n    <Col sm={2}>2 of 2</Col> \n  </Row>\n    </Grid>\n      \n    );\n  }\n}\n\nexport default TableBooking; ","import React, { Component } from 'react';\nimport { Card, CardTitle, CardText,\n    CardSubtitle, CardBody } from 'reactstrap';\n    import { \n      Row,\n      Col,\n      Grid\n    } from 'react-bootstrap';\nimport './App.css';\nimport Background from './playstation.jpg';\nvar sectionStyle = {\nbackgroundImage: `url(${Background})`,\n\n  width: \"101.85%\",\n  height: '100%',\n  paddingTop:'50px',\n  paddingLeft:'50px',\n  marginLeft:'-20px',\n  marginTop:'-20px',\n  paddingBottom:'50px',\n  marginRight:'100px',\n  color:'white',\n};\n\nclass PSBookingStatus extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      result: [],\n      } \n  }\n\n  componentDidMount() {\n    this.getList();\n  }\n\n  getList = () => {\n    fetch(\"/mznFag7kV7\")\n    .then(res => res.json())\n    .then(result => this.setState({ result }))\n  }\n\n  render() {\n    const { result} = this.state;\n    if(result[0]) {\n      var timesP1 = ['10:00-10:30', '10:30-11:00', '11:00-11:30', '11:30-12:00', '12:00-12:30', '12:30-13:00', '13:00-13:30', '13:30-14:00', '14:00-14:30', '14:30-15:00', '15:00-15:30', '15:30-16:00', '16:00-16:30', '16:30-17:00', '17:00-17:30', '17:30-18:00', '18:00-18:30', '19:00-19:30','19:30-20:00', '20:00-20:30', '20:30-21:00', '21:00-21:30', '22:00-22:30', '22:30-23:00', '23:00-23:30', '23:30-24:00'];\n      var timesP2 = ['10:00-10:30', '10:30-11:00', '11:00-11:30', '11:30-12:00', '12:00-12:30', '12:30-13:00', '13:00-13:30', '13:30-14:00', '14:00-14:30', '14:30-15:00', '15:00-15:30', '15:30-16:00', '16:00-16:30', '16:30-17:00', '17:00-17:30', '17:30-18:00', '18:00-18:30', '19:00-19:30','19:30-20:00', '20:00-20:30', '20:30-21:00', '21:00-21:30', '22:00-22:30', '22:30-23:00', '23:00-23:30', '23:30-24:00'];\n\n       \n       \n      for(var i=0; i<result.length; i++) {\n        if(result[i].TableType === 'Playstation 1') {\n          var index = timesP1.indexOf(result[i].TableTime);\n          timesP1.splice(index, 1);\n        }\n        if(result[i].TableType === 'Playstation 2') {\n          index = timesP2.indexOf(result[i].TableTime);\n          timesP2.splice(index, 1);\n        }\n        \n     }\n       timesP1 = timesP1.map(function(value){\n        return <li style={{backgroundColor:'white', color:'black', width:'80px', paddingBottom:'2px', marginBottom:'5px', borderRadius:'8px',paddingLeft:'3px'}}> {value} </li>;\n      });\n\n      timesP2 = timesP2.map(function(value){\n        return <li style={{backgroundColor:'white', color:'black', width:'80px', paddingBottom:'2px', marginBottom:'5px', borderRadius:'8px',paddingLeft:'3px'}}> {value} </li>;\n      });\n    } \n    \n    return(\n       \n        <Grid style = {sectionStyle}>\n         <Row style={{marginLeft:'20px'}}>\n          <Col className='portal' sm={2} xs={7}>\n          <Card body outline color=\"primary\">\n            <CardBody >\n            <CardTitle><h2>Playstation 1</h2></CardTitle>\n            <CardSubtitle style={{padding: '5px'}}><h4>Vacancies</h4></CardSubtitle>\n            <CardText><ul>{timesP1}</ul></CardText>\n            </CardBody>\n          </Card>\n          </Col>\n\n          <Col className='portal' sm={2} xs={7} >\n          <Card body outline color=\"primary\">\n            <CardBody >\n            <CardTitle><h2>Playstation 2</h2></CardTitle>\n            <CardSubtitle style={{padding: '5px'}}><h4>Vacancies</h4></CardSubtitle>\n            <CardText><ul>{timesP1}</ul></CardText>\n            </CardBody>\n          </Card>\n          </Col>\n        </Row>\n    </Grid>        \n    \n    );\n  }\n}\n\nexport default PSBookingStatus; ","import React from 'react';\nimport {\n  Modal,\n  Button,\n} from 'react-bootstrap';\n\n\nclass PsTsModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handlePostReq = this.handlePostReq.bind(this);\n    this.handleTotalBooking = this.handleTotalBooking.bind(this);\n    this.state = {\n      finalbook : [],\n      totalamount : 0\n    };\n    \n  }\n\n  handlePostReq(item,amount) {\n    // eslint-disable-next-line\n    fetch('/', {\n      method: 'POST',\n      body: JSON.stringify({\n        item : item,\n        amount : amount\n      }),\n      headers:{\n        'Content-Type': 'application/json'\n      }\n     }).then((res) => res.json())\n     .then((data) =>  console.log(data))\n     .catch((err)=>console.log(err));\n  }\n\n  handleTotalBooking(item,str,amount) {\n    // eslint-disable-next-line\n    var newArr = this.state.finalbook;\n    var totamo = this.state.totalamount\n    item.keeptimeNew = item.keeptime + \" \" + str;\n    if(newArr.includes(item.keeptimeNew) || newArr.length === 3) {\n    }\n    else {\n    newArr.push(item.keeptimeNew);\n    totamo = totamo + amount;\n    this.setState({finalbook:newArr, totalamount: totamo});\n    }\n  }\n\n  handleReset() {\n    \n  }\n  render() {\n    var  { finalbook, totalamount} = this.state;\n    if(finalbook && totalamount) {\n      console.log(finalbook + totalamount);\n    }\n    var final = this.state.finalbook;\n    final = final.map(function(value){\n      return <li> {value} </li>;\n    });\n    var item = this.props.modalid;\n    var slot = this.props.popoverlist;\n    var count = this.props.count;\n    var disabled = [false,false,false,false];\n    if(slot && item) {\n      if(slot[count].p1 === 'Booked') {\n        disabled[0] = true;\n      }\n      if(slot[count].p2 === 'Booked') {\n        disabled[1] = true;\n      }\n    } \n    return (\n      \t<Modal show={this.props.show} onHide={this.props.onhide}>\n          <Modal.Header closeButton>\n          <Modal.Title>Book Tables</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>            \n            <hr />\n            <Button disabled = {disabled[0]} bsStyle=\"primary\" bsSize=\"small\" onClick={() => { this.handleTotalBooking(item, 'Playstation 1',30)}} >Playstation 1</Button>\n            <Button disabled = {disabled[1]} bsStyle=\"primary\" bsSize=\"small\" onClick={() => { this.handleTotalBooking(item, 'Playstation 2',30)}}>Playstation 2</Button>\n          </Modal.Body>\n          <Modal.Footer style={{position:'relative', textAlign:'left'}}>\n            Total Amount is : {this.state.totalamount}\n            <br></br>\n            Bookings made are : {final}\n            <br></br>\n            <Button onClick={() => { this.handlePostReq({finalbook},{totalamount})}} href = \"https://studclubbooking.herokuapp.com/payment\">Confirm Booking</Button>\n            <Button onClick={this.props.onclick}>Close</Button>\n          </Modal.Footer>\n        </Modal>\n    );\n  }\n}\n\nexport default PsTsModal;","import React, { Component } from 'react';\nimport {\n  Grid,\n  Row,\n  Col,\n  Button,\n  OverlayTrigger,\n  Popover,\n} from 'react-bootstrap';\nimport './App.css';\nimport PsTsModal from'./PsTsModal';\nimport Background from './playstation.jpg';\n\nvar btstyle = {\n  padding: '10px',\n  margin : '10px',\n}\nvar backstyle = {\n  backgroundImage: `url(${Background})`,\n  marginLeft:'-15px',\n  marginRight:'-15px',\n  marginTop: '-20px'\n}\n// declaring variable for \nclass PsTimeslots extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleShow = this.handleShow.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleButPush = this.handleButPush.bind(this);\n    this.colhour = this.colhour.bind(this);\n    this.handlePopoverList = this.handlePopoverList.bind(this);\n    this.state = {\n      show: false, \n      buttonPush: 'invalid',\n      count : 0,\n      result: [],  \n      time : ['10:00-10:30', '10:30-11:00', '11:00-11:30', '11:30-12:00', '12:00-12:30', '12:30-13:00', '13:00-13:30', '13:30-14:00', '14:00-14:30', '14:30-15:00', '15:00-15:30', '15:30-16:00', '16:00-16:30', '16:30-17:00', '17:00-17:30', '17:30-18:00', '18:00-18:30', '19:00-19:30','19:30-20:00', '20:00-20:30', '20:30-21:00', '21:00-21:30', '22:00-22:30', '22:30-23:00', '23:00-23:30', '23:30-24:00'],\n      popoverlist : [{'p1': \"Available\", 'p2': \"Available\"},\n                     {'p1': \"Available\", 'p2': \"Available\"},\n                     {'p1': \"Available\", 'p2': \"Available\"},\n                     {'p1': \"Available\", 'p2': \"Available\"},\n                     {'p1': \"Available\", 'p2': \"Available\"},\n                     {'p1': \"Available\", 'p2': \"Available\"},\n                     {'p1': \"Available\", 'p2': \"Available\"},\n                     {'p1': \"Available\", 'p2': \"Available\"},\n                     {'p1': \"Available\", 'p2': \"Available\"},\n                     {'p1': \"Available\", 'p2': \"Available\"},\n                     {'p1': \"Available\", 'p2': \"Available\"},\n                     {'p1': \"Available\", 'p2': \"Available\"},\n                     {'p1': \"Available\", 'p2': \"Available\"},\n                     {'p1': \"Available\", 'p2': \"Available\"},\n                     {'p1': \"Available\", 'p2': \"Available\"},\n                     {'p1': \"Available\", 'p2': \"Available\"},\n                     {'p1': \"Available\", 'p2': \"Available\"},\n                     {'p1': \"Available\", 'p2': \"Available\"},\n                     {'p1': \"Available\", 'p2': \"Available\"},\n                     {'p1': \"Available\", 'p2': \"Available\"},\n                     {'p1': \"Available\", 'p2': \"Available\"},\n                     {'p1': \"Available\", 'p2': \"Available\"},\n                     {'p1': \"Available\", 'p2': \"Available\"},\n                     {'p1': \"Available\", 'p2': \"Available\"},\n                     {'p1': \"Available\", 'p2': \"Available\"},\n                     {'p1': \"Available\", 'p2': \"Available\"},\n                     {'p1': \"Available\", 'p2': \"Available\"},\n                     {'p1': \"Available\", 'p2': \"Available\"}                    \n                    ],\n    };\n  }\n\n  componentDidMount() {\n    this.getList();\n  }\n\n  getList = () => {\n    \n    fetch(\"/mznFag7kV7\")\n    .then(res => res.json())\n    .then(result => this.setState({ result }))\n  }\n\n  handleClose() {\n    this.setState({ show: false });\n  }\n\n  handleShow() {\n    this.setState({ show: true });\n  }\n  handleButPush(val,count) {\n    this.setState({ buttonpush: val , count: count});\n  }\n\n  handlePopoverList(keeptime,butdisable, count) {\n    const newList = this.state.popoverlist.slice();\n    if(butdisable) {\n      for (var i=0; i < butdisable.length; i++) {\n        if(butdisable[i].TableTime === keeptime) {\n          if(butdisable[i].TableType === 'Playstation 1') {\n            newList[count].p1 = 'Booked';\n          }\n          if(butdisable[i].TableType === 'Playstation 2') {\n            newList[count].p2 = 'Booked';\n          }\n        }\n      }\n      this.setState({popoverlist : newList});\n    }\n\n  }\n\n  popoverHoverFocus(count) {\n  return(\n  <Popover id=\"popover-trigger-hover-focus\" title=\"Playstation status\">\n    <strong >Console 1 -> {this.state.popoverlist[count].p1}</strong> <br />\n    <strong >Console 2 -> {this.state.popoverlist[count].p2}</strong> <br />\n  </Popover>\n  );\n  } \n  \n  \n  colhour(keeptime,butdisable,count) {\n    return(  \n        <Col className='halfhour' xs={4} md={1}>\n          <PsTsModal modalid = {this.state.buttonpush} popoverlist = {this.state.popoverlist} count = {this.state.count} show={this.state.show} onhide={this.handleClose} onclick={this.handleClose}   />\n            <OverlayTrigger overlay = {this.popoverHoverFocus(count)} delay={{ show: 250, hide: 400 }}>\n              <Button bsStyle=\"outline-info\" bsSize=\"large\" style={btstyle} onMouseEnter={() => {this.handlePopoverList(keeptime, butdisable, count);}} onClick={() => { this.handleShow(); this.handleButPush({keeptime},count); }}>\n                {keeptime} \n              </Button>\n            </OverlayTrigger>\n        </Col>\n    );\n  }\n\n\n  render() {\n    const { result } = this.state;\n    if(result === null) {\n      return <div />\n    }\n    if(result) {\n    var slot = result;\n    } \n    var time = this.state.time;\n    return (\n    <div className='psbook' style={backstyle}>\n    <Grid>\n    <h1 style={{color: 'white', marginLeft: '25px'}}><b>Playstation Booking</b></h1>\n     <br></br>\n      <Row className=\"timeslot\">\n        {this.colhour(time[0],slot,0)}\n        {this.colhour(time[1],slot,1)}\n        {this.colhour(time[2],slot,2)}\n        {this.colhour(time[3],slot,3)}\n        {this.colhour(time[4],slot,4)}\n        {this.colhour(time[5],slot,5)}\n        {this.colhour(time[6],slot,6)}\n      </Row>\n      <Row className=\"timeslot\">\n        {this.colhour(time[7],slot,7)}\n        {this.colhour(time[8],slot,8)}\n        {this.colhour(time[9],slot,9)}\n        {this.colhour(time[10],slot,10)}\n        {this.colhour(time[11],slot,11)}\n        {this.colhour(time[12],slot,12)}\n        {this.colhour(time[13],slot,13)}\n      </Row>\n      <Row className=\"timeslot\">\n        {this.colhour(time[14],slot,14)}\n        {this.colhour(time[15],slot,15)}\n        {this.colhour(time[16],slot,16)}\n        {this.colhour(time[17],slot,17)}\n        {this.colhour(time[18],slot,18)}\n        {this.colhour(time[19],slot,19)}\n        {this.colhour(time[20],slot,20)}\n      </Row>\n      <Row className=\"timeslot\">\n        {this.colhour(time[21],slot,21)}\n        {this.colhour(time[22],slot,22)}\n        {this.colhour(time[23],slot,23)}\n        {this.colhour(time[24],slot,24)}\n        {this.colhour(time[25],slot,25)}\n      </Row>\n\n      <div className=\"alert\"> \n                Please note that you cannot book more than 3 Playstations in a day. \n                In case of any discrepancy or amount deducted but table not being assigned, please report the incident to Student's Club. Refund will be initiated accordingly in about 14 days.\n              </div>\n    </Grid>\n    </div> \n    );\n  }\n}\n\nexport default PsTimeslots; ","import React, { Component } from 'react';\nimport NavbarHeader from './navbarhead';\nimport Timeslots from './Timeslots';\nimport LsFoosball from './LsFoosballAdmin.js';\nimport LoginAdmin from './LoginAdmin'\nimport Foosball from './LsFoosballFront';\nimport LsCarrom from './LsCarromAdmin';\nimport Carrom from './LsCarromFront';\nimport LsChess from './LsChessAdmin';\nimport Chess from './LsChessFront';\nimport LsPool from './LsPoolAdmin';\nimport Pool from './LsPoolFront';\nimport LsSnooker from './LsSnookerAdmin';\nimport Snooker from './LsSnookerFront';\nimport {BrowserRouter as Router,Route} from 'react-router-dom';\nimport './App.css';\nimport Background from './snooker.jpg';\nimport TableBookingStatus from './TableBookingStatus';\nimport TableBooking from './NewBooking';\nimport PSBookingStatus from './PsBookingStatus';\nimport PsTimeslots from './PsTimeslots';\n\n\nvar sectionStyle = {\n  width: \"100%\",\n  height: '100%',\n  backgroundImage: `url(${Background})`,\n  backgroundRepeat: 'repeat',\n  backgroundSize: 'cover',\n  top: '0', left: '0',right: '0', bottom: '0', minWidth: '100%', minHeight: '100%',\n  overflowX:'hidden'\n};\n\n\nclass App extends Component {\n  render() { \n    return (\n      <div style={ sectionStyle } className='container'>\n        <Router>\n          <div className=\"App\">\n          <NavbarHeader />\n          <Route exact path=\"/tablestatus\" render={props => (\n            <React.Fragment>\n              <TableBookingStatus />\n              <br></br><br></br>\n              <div className=\"alert\"> \n                1. Please note that you cannot book more than 3 tables in a day. \n                In case of any discrepancy or amount deducted but table not being assigned, please report the incident to Student's Club. Refund will be initiated accordingly in about 14 days.<br></br>\n                2. Please wait a few seconds before selecting so that the availability status can be updated.\n              </div>\n            </React.Fragment>\n          )}>\n          </Route> \n        {/* <Route path=\"/portal1\" component={TableBooking}/> */}\n        <Route path=\"/psstatus\" component={PSBookingStatus}/>\n        {/* <Route path=\"/psbooking\" component={PsTimeslots}/>\n        <Route path=\"/tablestatus\" component={TableBookingStatus}/> */}\n        <Route path=\"/admin2019\" component={LoginAdmin}/>\n        {/* <Route path=\"/lsfoosball\" component={LsFoosball}/>\n        <Route path=\"/foosballstream\" component={Foosball}/>  \n        <Route path=\"/lscarrom\" component={LsCarrom}/>  \n        <Route path=\"/carromstream\" component={Carrom}/> \n        <Route path=\"/lschess\" component={LsChess}/>\n        <Route path=\"/chessstream\" component={Chess}/>   \n        <Route path=\"/lspool\" component={LsPool}/>  \n        <Route path=\"/poolstream\" component={Pool}/> \n        <Route path=\"/lssnooker\" component={LsSnooker}/>\n        <Route path=\"/snookerstream\" component={Snooker}/>          */}\n        </div>\n        </Router>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport App from './App';\n// import 'bootstrap/dist/css/bootstrap.css';\n// import 'bootstrap/dist/css/bootstrap-theme.css';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Route component={App} />\n  </BrowserRouter>,\n  document.getElementById('root')\n);","module.exports = __webpack_public_path__ + \"static/media/playstation.777ffba0.jpg\";"],"sourceRoot":""}